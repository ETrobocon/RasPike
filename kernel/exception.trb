# -*- coding: utf-8 -*-
#
#   TOPPERS/ASP Kernel
#       Toyohashi Open Platform for Embedded Real-Time Systems/
#       Advanced Standard Profile Kernel
# 
#   Copyright (C) 2015 by FUJI SOFT INCORPORATED, JAPAN
#   Copyright (C) 2015,2016 by Embedded and Real-Time Systems Laboratory
#               Graduate School of Information Science, Nagoya Univ., JAPAN
# 
#   上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
#   ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
#   変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
#   (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
#       権表示，この利用条件および下記の無保証規定が，そのままの形でソー
#       スコード中に含まれていること．
#   (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
#       用できる形で再配布する場合には，再配布に伴うドキュメント（利用
#       者マニュアルなど）に，上記の著作権表示，この利用条件および下記
#       の無保証規定を掲載すること．
#   (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
#       用できない形で再配布する場合には，次のいずれかの条件を満たすこ
#       と．
#     (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
#         作権表示，この利用条件および下記の無保証規定を掲載すること．
#     (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
#         報告すること．
#   (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
#       害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
#       また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
#       由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
#       免責すること．
# 
#   本ソフトウェアは，無保証で提供されているものである．上記著作権者お
#   よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
#   に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
#   アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
#   の責任を負わない．
# 
#   $Id: exception.trb 663 2016-02-27 04:45:50Z ertl-hiro $
# 

#
#		CPU例外管理機能の生成スクリプト
#

#
#  kernel_cfg.cの生成
#
$kernelCfgC.comment_header("CPU Exception Management Functions")

#
#  CPU例外ハンドラに関するエラーチェック
#
$cfgData[:DEF_EXC].each do |key, params|
  # excnoがCPU例外ハンドラ番号として正しくない場合（E_PAR）［NGKI3134］
  if $EXCNO_VALID.index(params[:excno]).nil?
    error_illegal("E_PAR", params, :excno)
  end

  # excatrが無効の場合（E_RSATR）［NGKI3131］
  #（TARGET_EXCATR以外のビットがセットされている場合）
  if (params[:excatr] & ~($TARGET_EXCATR)) != 0
    error_illegal_sym("E_RSATR", params, :excatr, :excno)
  end
end

#
#  CPU例外ハンドラのための標準的な初期化情報の生成
#
if !$OMIT_INITIALIZE_EXCEPTION
  #
  #  定義するCPU例外ハンドラの数
  #
  $kernelCfgC.add(<<EOS)
#define TNUM_DEF_EXCNO	#{$cfgData[:DEF_EXC].size}
const uint_t _kernel_tnum_def_excno = TNUM_DEF_EXCNO;
EOS

  if $cfgData[:DEF_EXC].size != 0
    #
    #  CPU例外ハンドラのエントリ
    #
    $cfgData[:DEF_EXC].each do |key, params|
      $kernelCfgC.add("EXCHDR_ENTRY(#{params[:excno]}, " \
						"#{params[:excno].val}, #{params[:exchdr]})")
    end
    $kernelCfgC.add("")

    #
    #  CPU例外ハンドラ初期化ブロック
    #
    $kernelCfgC.add("const EXCINIB _kernel_excinib_table[TNUM_DEF_EXCNO] = {")
    $cfgData[:DEF_EXC].each_with_index do |(key, params), index|
      $kernelCfgC.add(",") if index > 0
      $kernelCfgC.append("\t{ (#{params[:excno]}), (#{params[:excatr]}), " \
				"(FP)(EXC_ENTRY(#{params[:excno]}, #{params[:exchdr]})) }")
    end
    $kernelCfgC.add
    $kernelCfgC.add2("};")
  else
    $kernelCfgC.add2("TOPPERS_EMPTY_LABEL(const EXCINIB, " \
										"_kernel_excinib_table);")
  end
end

#
#  CPU例外管理機能初期化関数の追加
#
$initializeFunctions.push("_kernel_initialize_exception();")
